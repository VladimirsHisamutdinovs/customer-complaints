version: '3.9'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - telecom_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password123
    networks:
      - telecom_network
    volumes:
      - neo4j_data:/data
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password123 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  neo4j_graphdb:
    build:
      context: ./neo4j_graphdb
      dockerfile: Dockerfile.client
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - telecom_network

  customer_complaints_db:
    image: postgres:latest
    container_name: customer_complaints_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: customer_complaints_db
    ports:
      - "5434:5432"
    volumes:
      - customer_pgdata:/var/lib/postgresql/data
      - ./postgres/customer_complaints_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - telecom_network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d customer_complaints_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  customer_agent:
    build:
      context: ./customer
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      customer_complaints_db:
        condition: service_healthy
    networks:
      - telecom_network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=customer_complaints_db
      - POSTGRES_DB=customer_complaints_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  customer_support_agent:
    build:
      context: ./customer_support
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      customer_complaints_db:
        condition: service_healthy
    networks:
      - telecom_network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=customer_complaints_db
      - POSTGRES_DB=customer_complaints_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  test_initiation:
    build:
      context: ./test_initiation
      dockerfile: Dockerfile
    networks:
      - telecom_network
    command: ["python", "test_initiation.py"]
    depends_on:
      redis:
        condition: service_healthy
      customer_agent:
        condition: service_started
      customer_support_agent:
        condition: service_started

  timeseries_generator:
    build:
      context: ./timeseries_generator
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - telecom_network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  alerter:
    build:
      context: ./alerter
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      timeseries_generator:
        condition: service_started
    networks:
      - telecom_network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  timesfm:
    build: ./timesfm
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - telecom_network
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123

networks:
  telecom_network:
    driver: bridge

volumes:
  neo4j_data:
  customer_pgdata:
