version: '3.9'

services:
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - telecom_network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - telecom_network

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: "neo4j/password"
    networks:
      - telecom_network
    volumes:
      - neo4j_data:/data

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: complaints_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - telecom_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./path/to/tables.sql:/docker-entrypoint-initdb.d/tables.sql

  llm_agents:
    build:
      context: .
      dockerfile: agents/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      neo4j:
        condition: service_started
      postgres:
        condition: service_started
      ollama:
        condition: service_healthy
    networks:
      - telecom_network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    restart: always
    networks:
      - telecom_network
    healthcheck:
      test: ["CMD-SHELL", "apt-get update && apt-get install -y curl && curl -f http://localhost:11434 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  telecom_network:
    driver: bridge

volumes:
  ollama:
  postgres_data:
  neo4j_data:
